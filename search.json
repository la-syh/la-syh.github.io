[{"title":"高等代数学习笔记","url":"/post/77682b85.html","content":"\n<!--more-->\n\n","tags":["学习笔记","高等代数"],"categories":["数学"]},{"title":"Pell 方程","url":"/post/9861dc77.html","content":"\n内容基本来源于 [OI-wiki](https://oi-wiki.org/math/number-theory/pell-equation)\n\n<!--more-->\n\n## 定义与结构\n\n（广义）Pell 方程指关于 $x,y$ 的不定方程 \n\n$$\nx^2-Dy^2=C\n$$\n\n当 $D\\le 0$ 或为完全平方数时是平凡的，我们不予考虑，同时，解 $(\\pm 1,0)$ 也是平凡的，接下来的讨论中忽略该解。而狭义的 Pell 方程专指 $C=1$ 或 $C=\\pm 1$ 的特殊情况。\n\n对于一个二次整数 $x+y\\sqrt D$（它是一个二次方程的根），定义其范数为它与它的共轭的积，记为\n\n$$\nN(x+y\\sqrt D)=x^2-Dy^2\n$$\n\n所以，广义 Pell 方程大致相当于在求解范数为 $C$ 的二次整数，但并不等价，因为二次整数形如 $\\frac{-b \\pm \\sqrt{b^2-4ac}}{2a}$，当 $D \\equiv 1 \\pmod 4$ 时， $x,y$ 可以同时为半整数。\n\n范数具有一些性质，这对 Pell 方程的求解至关重要。\n\n**Brahmagupta 恒等式** \n\n$$\n(x_1^2-Dy_1^2)(x_2^2-Dy_2^2)=(x_1x_2+Dy_1y_2)^2-D(x_1y_2+x_2y_1)^2\n$$\n\n证明显然。这说明了什么？这说明二次整数的范数保持乘法，也即\n\n$$\nN(x_1+y_1 \\sqrt D) \\cdot N(x_2+y_2 \\sqrt D)=N\\Big( (x_1+y_1\\sqrt D)(x_2+y_2\\sqrt D) \\Big)\n$$\n\n利用这个性质，假如我们知道了 $x^2-Dy^2=N_1$ 的一组解和 $x^2-Dy^2=N_2$ 的一组解，我们就能立刻写出 $x^2-Dy^2=N_1N_2$ 的一组解。正因 Pell 方程的解和二次整数的紧密联系，我们将解 $(x,y)$ 直接写成 $x+y\\sqrt D$ 的形式。\n\n同时，由于 Pell 方程表示的是一个双曲线的方程，所以我们只需要找到第一象限的所有解即可。\n\n在下文中，我们只探讨狭义 Pell 方程的求解，文章开头的链接中给出了广义 Pell 方程的求解方式，但这里暂时不作延申。\n\n## 狭义 Pell 方程的求解\n\n由上文可知，如果存在一个解 $x_1+y_1\\sqrt D$，那么所有 $(x_k+y_k \\sqrt D)=(x_1+y_1\\sqrt D)^k$ 都将是 Pell 方程的解（范数的积性），我们先声称存在一个基本解（使 $x_1+y_1\\sqrt D$ 最小的 $(x_1,y_1)$），下面证明它的 $k$ 次幂 $x_k+y_k \\sqrt D$ 可以得到所有解。\n\n不妨设第一象限中存在一个另外的解 $x_k+y_k\\sqrt D < x+y\\sqrt D < x_{k+1}+y_{k+1}\\sqrt D$，两侧同时乘 $x_k-y_k\\sqrt D$ 得到\n\n$$\n1 < (xx_k-Dyy_k)+(x_ky-xy_k)\\sqrt D < x_1+y_1\\sqrt D\n$$\n\n这与 $x_1+y_1 \\sqrt D$ 最小矛盾！\n\n下面，我们给出 Pell 方程基本解的构造性证明。\n\n### PQa 算法\n\nPQa 算法可以得出特定的二次无理数的连分数展开。设整数 $P_0,Q_0,D$ 满足 $Q_0 \\ne 0$，$D > 0$ 且不是完全平方数，且 $P_0^2 \\equiv D \\pmod {Q_0}$，那么二次无理数\n\n$$\n\\omega=\\frac{P_0+\\sqrt D}{Q_0}\n$$\n\n的连分数展开 $[a_0,a_1,\\cdots]$ 可以由如下递推求得：\n\n$$\n\\begin{cases}\na_k=\\left\\lfloor \\frac{P_k+\\sqrt D}{Q_k} \\right\\rfloor\\\\\nP_{k+1}=a_kQ_k-P_k\\\\\nQ_{k+1}=\\frac{D-P_{k+1}^2}{Q_k}\n\\end{cases}\n$$\n\n进而， $\\omega$ 的第 $k$ 个渐进分数的分子和分母 $A_k$ 和 $B_k$ 由如下递推给出：\n\n$$\n\\begin{cases}\nA_k=a_kA_{k-1}+A_{k-2}\\\\\nB_k=a_kB_{k-1}+B_{k-2}\n\\end{cases}\n$$\n\n其中 $A_{-1}=1$，$A_{-2}=0$，$B_{-1}=0$，$B_{-2}=1$\n\n证明可以参见 [OI-wiki](https://oi-wiki.org/math/number-theory/continued-fraction/)，也可以看 [ProjectEuler板刷记录](https://la-syh.blog/post/7399281c.html) 中的`Problem 64`。\n\n记 $\\omega = [a_0,\\cdots ,a_{k_0-1},\\overline{a_{k_0},\\cdots ,a_{k_0+l-1}}]$，下面我们利用 PQa 算法解决 Pell 方程。\n\n::: {.theorem .unnumbered#定理}\n设 $G_k=Q_0A_k-P_0B_k$，则整数对 $(G_{k-1},B_{k-1})$ 满足 \n\n$$\nG_{k-1}^2-DB_{k-1}^2=(-1)^kQ_0Q_k\n$$\n\n且它们的最大公因数 $\\operatorname{gcd}(G_{k-1},B_{k-1})$ 整除 $Q_k$\n:::","tags":["学习笔记","数论"],"categories":["数学"]},{"title":"ProjectEuler板刷记录","url":"/post/7399281c.html","content":"\n本文收录一些[ProjectEuler](https://projecteuler.net/)中有趣的题目并给出个人题解。\n\n<!--more-->\n\n**[Problem 54](https://projecteuler.net/problem=54)**\n\n本题并不困难，只是一个简单的模拟，但是如何让代码量减小是一个值得讨论的问题。\n\n首先，我们可以将牌的点数和花色分开存储，我们只关心“所有牌的花色是否均相同”而不关注“每个牌的花色是多少”，所以可以分别排序。\n\n之后，写一个函数level(card, color)来返回手牌的等级（数字越大，等级越高），若两人等级不同则直接判断，否则需要进一步比较具体点数。\n\n这里是减少代码量的关键一步：不必对每一个等级都写一个具体的比较，注意到只有`Flush`的比较策略是不同的：每次拿剩下的最大手牌比较。\n\n对于剩下的等级，我们只需对每个玩家存储：对每个k，出现过k次的牌的点数是什么。之后，依次比较出现过4次、3次、2次、1次的牌的点数大小即可。\n\n{% fold Problem 54 示例代码 %}\n```py Problem 54\nwith open('0054_poker.txt', 'r') as file:\n    content = file.readlines()\n\nans = 0\ndef init(str):\n    if ord(str[0]) >= ord('2') and ord(str[0]) <= ord('9'):\n        return ord(str[0]) - ord('0')\n    if str[0] == 'T':\n        return 10\n    if str[0] == 'J':\n        return 11\n    if str[0] == 'Q':\n        return 12\n    if str[0] == 'K':\n        return 13\n    if str[0] == 'A':\n        return 14\n    return -1\ndef level(card, color):\n    straight = True\n    for k in range(1, 5):\n        if card[k] != card[k - 1] + 1:\n            straight = False\n    if color[0] == color[4]:\n        if straight and card[0] == 10:\n            return 10\n        elif straight:\n            return 9\n    if card[0] == card[3] or card[1] == card[4]:\n        return 8\n    if (card[0] == card[2] and card[3] == card[4]) or (card[0] == card[1] and card[2] == card[4]):\n        return 7\n    if color[0] == color[4]:\n        return 6\n    if straight:\n        return 5\n    if card[0] == card[2] or card[1] == card[3] or card[2] == card[4]:\n        return 4\n    pairs_count = 0\n    k = 0\n    while k < 4:\n        if card[k] == card[k + 1]:\n            pairs_count += 1\n            k += 1\n        k += 1\n    if pairs_count == 2:\n        return 3\n    if pairs_count == 1:\n        return 2\n    return 1\ndef beat(Alice, Bob):\n    level_Alice = level(Alice[0], Alice[1])\n    level_Bob = level(Bob[0], Bob[1])\n    if level_Alice != level_Bob:\n        return level_Alice > level_Bob\n    if level_Alice == 6:\n        k = 4\n        while True:\n            if Alice[0][k] != Bob[0][k]:\n                return Alice[0][k] > Bob[0][k]\n            k -= 1\n    A = [[], [], [], [], []]\n    B = [[], [], [], [], []]\n    for k in range(2, 15):\n        A[Alice[0].count(k)].append(k)\n        B[Bob[0].count(k)].append(k)\n    for k in range(1, 5):\n        A[k].sort(reverse = True)\n        B[k].sort(reverse = True)\n    k = 4\n    while True:\n        for i in range(len(A[k])):\n            if A[k][i] != B[k][i]:\n                return A[k][i] > B[k][i]\n        k -= 1\ndef work(arr):\n    global ans\n    arr = arr.split()\n    Alice = [[init(arr[k]) for k in range(0, 5)], [arr[k][1] for k in range(0, 5)]]\n    Bob = [[init(arr[k]) for k in range(5, 10)], [arr[k][1] for k in range(5, 10)]]\n    for k in range(0, 2):\n        Alice[k].sort()\n        Bob[k].sort()\n    # print(Alice)\n    # print(Bob)\n    if beat(Alice, Bob):\n        ans += 1\nfor line in content:\n    work(line)\nprint(ans)\n```\n{% endfold %}\n\n**[Problem 59](https://projecteuler.net/problem=59)**\n\n简单有趣的一道题。可以通过字母频率分析猜一猜密钥，如果懒得做的话可以像我一样直接枚举。\n\n得到所有可能的原文章后，我们要筛选出有意义的那一个，当然不能一个一个去看，可以在Sublime Text里搜索几个常见词汇，比如我搜索了` the `（两侧带空格），直接可以得到密钥是`exp`，问题就结束了。\n\n{% fold Problem 59 代码 %}\n```py 得到所有可能的原串\ntext = []   # 填入所给文件内容\nkey = [0, 0, 0]\ndef work():\n    id = 0\n    T = text.copy()\n    for i in range(len(T)):\n        T[i] = chr(T[i] ^ key[id])\n        id += 1\n        if id == 3:\n            id = 0\n    str = ''\n    for c in T:\n        str += c\n    with open('output.txt', 'a') as f:\n        for k in range(0, 3):\n            f.write(chr(key[k]))\n        f.write('\\n')\n        f.write(str)\n        f.write('\\n')\nfor a in range(ord('a'), ord('z') + 1):\n    key[0] = a\n    for b in range(ord('a'), ord('z') + 1):\n        key[1] = b\n        for c in range(ord('a'), ord('z') + 1):\n            key[2] = c\n            work()\n```\n\n```py 已知密钥求答案\ntext = []   # 填入所给文件内容\nkey = [ord('e'), ord('x'), ord('p')]\nid = 0\nfor i in range(len(text)):\n    text[i] = text[i] ^ key[id]\n    id += 1\n    if id == 3:\n        id = 0\nans = 0\nfor x in text:\n    ans += x\nprint(ans)\n```\n{% endfold %}\n\n**[Problem 60](https://projecteuler.net/problem=60)**\n\n本题是前60道题中难度最大的一道，但是也比较常规。\n\n考虑转化到图论上。如果两个素数的拼接仍然是素数，就在它们之间连边，要求的就是数字和最小的 $K_5$ 子图。这种东西就直接爆搜，远远跑不满五次方的上界，可以在 $8$ 秒内跑出结果，如果用某些工程库的求 $K_5$ 子图模板可以更快，但没必要。\n\n本题中如果没有提前建好图，而是在爆搜过程中不断调用`isprime`会巨慢无比，什么东西都跑不出来，笔者最开始就是因为这个卡住了。\n\n{% fold Problem 60 示例代码 %}\n```py Problem 60\nimport math\nimport time\nimport sympy\nSTART = time.time()\n\nN = int(1e6) + 10\nd = [0] * N\nprimes = []\ndef Sieve(n):\n    d[1] = 1\n    for i in range(2, n + 1):\n        if d[i] == 0:\n            d[i] = i\n            primes.append(i)\n        for x in primes:\n            if x * i > n:\n                break\n            d[x * i] = x\n            if(i % x == 0):\n                break\nSieve(int(1e4))\ndef check(a, b):\n    return sympy.isprime(int(str(a) + str(b))) and sympy.isprime(int(str(b) + str(a)))\nedges = [[] for _ in range(len(primes))]\nfor i in range(len(primes)):\n    for j in range(i + 1, len(primes)):\n        if check(primes[i], primes[j]):\n            edges[i].append(j)\n            edges[j].append(i)\nprint('Total nodes:', len(primes))\n\nans = int(1e18)\nval = [0, 0, 0, 0, 0]\ndef dfs(dep):\n    global ans, val\n    if dep == 5:\n        S = 0\n        for k in range(5):\n            S += primes[val[k]]\n        print(val)\n        ans = min(ans, S)\n        print(ans)\n        return\n    for i in range(len(primes)):\n        if primes[i] == 5:\n            continue\n        if dep != 0 and i <= val[dep - 1]:\n            continue\n        val[dep] = i\n        flag = True\n        for j in range(0, dep):\n            if not edges[i].count(val[j]):\n                flag = False\n                break\n        if flag:\n            dfs(dep + 1)\ndfs(0)\nprint('Result =', ans)\n\nEND = time.time()\nprint(f\"耗时:{END - START:.4f}秒\")\n```\n{% endfold %}\n\n**[Problem 64](https://projecteuler.net/problem=64)**\n\n以连分数为背景的一道题，正好来学习一下相关内容。\n\n定理：所有循环连分数都是二次无理数，且任何一个二次无理数都可以写成循环连分数的形式。\n\n证明：先证明所有循环连分数都是二次无理数。对于一般的循环连分数 $x=[a_0,\\cdots, a_{k-1},\\overline{a_k,\\cdots ,a_{k+L+1}}]$，设 $y=[\\overline{a_k, \\cdots, a_{k+L+1}}]$，则\n\n$$\n\\begin{aligned}\n&x=[a_0,\\cdots, a_{k-1},\\overline{a_k,\\cdots ,a_{k+L+1}}]=L_0(y)\\\\\n&y=[\\overline{a_k, \\cdots, a_{k+L+1}}]=L_1(y)\n\\end{aligned}\n$$\n\n其中 $L_0$ 和 $L_1$ 都是分式线性变换，于是得到\n\n$$\nx=L_0 \\circ L_1 \\circ L_0^{-1}(x)\n$$\n\n右侧的复合仍然是一个分式线性变换，不妨设\n\n$$\nL_0 \\circ L_1 \\circ L_0^{-1}(x)=\\frac{ax+b}{cx+d}\n$$\n\n则得到关于 $x$ 的方程 $cx^2+(d-a)x-b=0$，因此循环连分数都是整系数二次方程的解，又因为无线连分数都是无理数，因此循环连分数表示了二次无理数。\n\n接下来，我们证明任意二次无理数都可以写成循环连分数，这是对于本题重要的一步，因为我们可以通过这个过程得到计算连分数形式的算法。\n\n首先，二次无理数总可以表示成 $x=\\frac{P_0+\\sqrt D}{Q_0}$ 的形式，其中 $P_0,Q_0,D$ 都是整数且 $Q_0 | D-P_0^2$。证明很容易，$\\frac{p_a}{q_a}+\\frac{p_b}{q_b}\\sqrt{D'}$可以通分为\n\n$$\n\\frac{p_ap_bq_aq_b+\\sqrt{(q_aq_b)^2D'}}{(q_aq_b)^2}\n$$\n\n令 $P=p_ap_bq_aq_b$，$Q=(q_aq_b)^2$，$D=QD'$ 即可。\n\n为什么要写成这样的形式？因为它的所有余项都有类似的形式：\n\n$$\nr_k=\\frac{P_k+\\sqrt{D}}{Q_k}\n$$\n\n其中 $P_k$，$Q_k$ 是整数并且 $Q_k | D-P_k^2$。其中，条件 $Q_k | D-P_k^2$保证了所有余项的分子中，$\\sqrt D$ 前面的系数都是 $1$。\n\n数学归纳求 $P_k$，$Q_k$ 的形式：设 $a_k=\\left\\lfloor r_k \\right\\rfloor$，那么 $r_k=a_k+\\frac{1}{r_{k+1}}$。\n\n设 $r_{k+1}$ 也有类似形式，带入得到\n\n$$\n\\frac{P_k+\\sqrt D}{Q_k}=a_k+\\frac{Q_{k+1}}{P_{k+1}+ \\sqrt D}=a_k+\\frac{Q_{k+1}P_{k+1}-Q_{k+1}\\sqrt D}{P_{k+1}^2-D}\n$$\n\n对比系数可得\n\n$$\n\\begin{cases}\nP_{k+1}=a_kQ_k-P_k\\\\\nQ_{k+1}=-a_k^2Q_k+2a_kP_k+\\frac{D-P_k^2}{Q_k}\n\\end{cases}\n$$\n\n实际应用时，可以用更简便的 $Q_{k+1}=\\frac{D-P_{k+1}^2}{Q_k}$\n\n根据 $Q_k | D-P_k^2$，所以 $P_{k+1}$ 和 $Q_{k+1}$ 确实都是整数，即 $r_{k+1}$ 确实具有要求的形式。\n\n到此，我们已经得到了求二次无理数的连分数形式的算法，下面证明余项只能取到有限多个值，因此必然存在循环节。\n\n已经求得余项为\n\n$$\n\\frac{P_k+\\sqrt D}{Q_k}=r_k=-\\frac{q_{k-2}x-p_{k-2}}{q_{k-1}x-p_{k-1}}\n$$\n\n对于无理数，总有 $r_k>1$，同时，其共轭 \n\n$$\nr_k^*=-\\frac{q_{k-2}}{q_{k-1}}\\frac{x^*-\\frac{p_{k-2}}{q_{k-2}}}{x^*-\\frac{p_{k-1}}{q_{k-1}}}\n$$\n\n因为 $q_{k-2}/q_{k-1}>0$ 并且 \n\n$$\n\\lim_{k \\to \\infty} \\frac{x^*-\\frac{p_{k-2}}{q_{k-2}}}{x^*-\\frac{p_{k-1}}{q_{k-1}}}=\\frac{x^*-x}{x^*-x}=1\n$$\n\n因此对充分大的 $k$，必然有 $r_k^*<0$，因此 \n\n$$\n\\frac{2\\sqrt D}{Q_k}=r_k-r_k^*>1\n$$\n\n得到\n\n$0 < Q_k \\le 2\\sqrt D$，因此 $Q_k$ 只能取有限个值，进一步由递推公式，$P_k$ 也只能取有限个值，证毕。\n\n代码就根据上面的递推写就行了，没什么难度。这里直接用了[OI-wiki](https://oi-wiki.org/math/number-theory/continued-fraction/#__tabbed_8_2)的实现。\n\n{% fold Problem 64 代码 %}\n```py Problem 64\n# Return the continued fraction and minimal positive period\n#   of a quadratic irrational (x + y * sqrt(n)) / z.\nimport math\ndef quadratic_irrational(x, y, z, n):\n    p = x * z\n    d = n * y * y * z * z\n    q = z * z\n    dd = math.floor(math.sqrt(n)) * y * z\n    i = 0\n    a = []\n    used = dict()\n    while (p, q) not in used:\n        a.append((p + dd) // q)\n        used[p, q] = i\n        p = a[-1] * q - p\n        q = (d - p * p) // q\n        i += 1\n    return a, i - used[p, q]\n\nans = 0\nfor k in range(1, 10000 + 1):\n    if int(math.sqrt(k)) ** 2 == k:\n        continue\n    if quadratic_irrational(0, 1, 1, k)[1] % 2 == 1:\n        ans += 1\nprint(ans)\n```\n{% endfold %}","tags":["习题"],"categories":["数学"]},{"title":"Machine Learning","url":"/post/c5317df1.html","tags":["学习笔记"]},{"title":"高等数学学习笔记","url":"/post/4fc449fa.html","content":"\n本文仅摘录一些概念，内容主要来自同济《高等数学》（第八版），更多题目会在别的文章中.\n\n本文不会过多展示网络上可以广泛寻找到的证明内容.\n<!--more-->\n\n## 极限，连续性\n\n**极限存在准则I（数列）** 如果数列 $x,y,z$ 满足\n\n- $\\exists n_0 \\in \\mathbb{N}_+$，当$n>n_0$ 时有 $y_n\\le x_n \\le z_n$\n\n- $\\lim y_n=\\lim z_n = A$\n\n那么数列 $\\{x_n\\}$ 的极限存在且等于 $A$.\n\n**极限存在准则I'（函数）** 如果\n\n- 当 $x \\in \\overset{\\circ}{U}(x_0,r)$（或$|x|>M$）时，$g(x)\\le f(x)\\le h(x)$ \n\n- $\\lim g(x)=\\lim h(x)=A$\n\n那么 $\\lim f(x)$ 存在且等于 $A$.\n\n**准则II** 单调有界数列必有极限\n\n**准则II'** 设函数 $f(x)$ 在点 $x_0$ 的某个左邻域内单调且有界，则 $f(x)$ 在 $x_0$ 的左极限必定存在.\n\n**Cauchy 极限存在准则** 数列 $\\{x_n\\}$ 收敛的充分必要条件是：对于任意给定的正数 $\\varepsilon$ ，存在正整数 $N$ 使得当 $n,m>N$ 时有 $|x_n-x_m|<\\varepsilon$  \n\n同济《高等数学》中避开了对充分性的证明，事实上可以用 Bolzano-Weierstrass 定理‌证.\n\n**Bolzano-Weierstrass 定理‌** 有界数列必有一个收敛子列.\n\n欲证Bolzano-Weierstrass 定理‌，仅需证一个叫Peak point lemma的引理.\n\n**Peak point lemma** 任意数列都具有一个单调递增或单调递减的子列.\n$$\n(1+x)^n \\sim 1+nx(x \\to 0)\n$$\n习题1-6.4：利用极限存在准则证明 \n$$\n(2)\\lim_{n \\to \\infty}\\sum_{k=1}^{n}\\frac{1}{n+\\frac{k\\pi}{n}}=1\\\\\n(4)\\lim_{x \\to 0^+} x\\left\\lfloor\\frac{1}{x} \\right\\rfloor=1\n$$\n (2) 考虑 $n<n+\\frac{k\\pi}{n}\\le n+\\pi$，(4) 考虑 $t-1<\\left\\lfloor t \\right\\rfloor\\le t$.\n\n**连续** 设函数 $y=f(x)$ 在点 $x_0$ 的某一邻域内有定义，如果 \n$$\n\\lim_{\\Delta x \\to 0} \\Delta y=\\lim_{\\Delta x \\to 0} [f(x_0+\\Delta x) - f(x_0)]=0\n$$\n那么就称函数 $y=f(x)$ 在点 $x_0$ 连续.\n\n上式还等价于 \n$$\n\\lim_{x\\to x_0} f(x)=f(x_0)\n$$\n对于左（右）连续，将极限换为左（右）极限即可.\n\n习题1-8.8：$f(x)$ 是定义域为 $\\mathbb R$ 的线性函数，且 $f(x)$ 在$x=0$ 处连续，则它在 $\\mathbb R$ 上连续.\n\n**一致连续** 设函数 $f(x)$ 在区间 $I$ 上有定义.如果对于任意给定的正数 $\\varepsilon$，总存在正数 $\\delta$，使得对于区间 $I$ 上的任意两点 $x_1,x_2$，当 $|x_1-x_2|<\\delta$ 时，有 $|f(x_1)-f(x_2)|<\\varepsilon$，那么称函数 $f(x)$ 在区间 $I$ 上一致连续.\n\n**一致连续性定理** 如果函数 $f(x)$ 在闭区间 $[a,b]$ 上连续，那么它在该区间上一致连续.\n\n 习题1-10.9：在什么条件下，$(a,b)$ 内的连续函数 $f(x)$ 一致连续？\n\n充要条件：$\\lim_{x \\to a^+} f(x)$ 和 $\\lim_{x \\to b^-} f(x)$ 均存在\n\n## 导数，微分\n\n习题2-1.4：设函数 \n\n$$\nf(x)=\\frac{(x-1)(x-2)\\cdots (x-n)}{(x+1)(x+2)\\cdots (x+n)}\n$$\n\n求 $f'(1)$.\n\n直接求导有点抽象，对数求导出来也要算一个极限，那就试试直接按定义做. $f(1)=0$，于是\n\n$$\n\\lim_{h \\to 0} \\frac{f(1+h)-f(1)}{h}=\\lim_{h \\to 0} \\frac{f(1+h)}{h}=\\lim_{h \\to 0}\\frac{1}{h}\\cdot \\frac{h(h-1)\\cdots (h-n+1)}{(h+2)(h+3)\\cdots (h+n+1)}\n$$\n\n于是 \n\n$$\nf'(1)=\\lim_{h \\to 0} \\frac{(h-1)\\cdots (h-n+1)}{(h+2)\\cdots (h+n+1)}=(-1)^{n-1}\\frac{(n-1)!}{(n+1)!}=\\frac{(-1)^{n-1}}{n(n+1)}\n$$\n\n**微分** 设函数 $y=f(x)$ 在某区间内有定义，$x_0$ 及 $x_0+\\Delta x$ 在这区间内，如果函数的增量 $\\Delta y=f(x_0+\\Delta x)-f(x_0)$ 可表示为\n\n$$\n\\Delta y=A\\Delta x+o(\\Delta x)\n$$\n\n其中 $A$ 是不依赖于 $\\Delta x$ 的常数，那么称函数 $y=f(x)$ 在点 $x_0$ 是可微的，而 $A\\Delta x$ 叫做函数 $y=f(x)$ 在点 $x_0$ 相应于自变量增量 $\\Delta x$ 的微分，记作 ${\\rm d} y$，即 ${\\rm d} y=A\\Delta x$.\n\n### 微分中值定理\n\n**Fermat 引理** 设函数 $f(x)$ 在点 $x_0$ 的某邻域 $U(x_0)$ 内有定义，并且在 $x_0$ 处可导，如果对任意的 $x \\in U(x_0)$，有 $f(x) \\le f(x_0)$（或 $f(x) \\ge f(x_0)$），那么 $f'(x_0)=0$.\n\n**Rolle 定理** 如果函数 $f(x)$ 满足\n\n- 在闭区间 $[a,b]$ 上连续\n- 在开区间 $(a,b)$ 上可导\n- 在区间端点处的函数值相等，即 $f(a)=f(b)$\n\n那么在 $(a,b)$ 内至少有一点 $\\xi$ 使得 $f'(\\xi)=0$.\n\n**Lagrange 中值定理** 如果函数 $f(x)$ 满足 \n\n- 在闭区间 $[a,b]$ 连续\n- 在开区间 $(a,b)$ 内可导\n\n那么在 $(a,b)$ 上至少有一点 $\\xi$ 满足 $f'(\\xi)=\\frac{f(b)-f(a)}{b-a}$.\n\n**Cauchy 中值定理** 如果函数 $f(x)$ 与 $F(x)$ 满足\n\n- 在闭区间 $[a,b]$ 上连续\n- 在开区间 $(a,b)$ 内可导\n- 对任一 $x \\in (a,b),F'(x) \\ne 0$\n\n那么在 $(a,b)$ 内至少有一点 $\\xi$ 使等式\n\n$$\n\\frac{f(b)-f(a)}{F(b)-F(a)}=\\frac{f'(\\xi)}{F'(\\xi)}\n$$\n\n成立.\n\n### 洛必达（L'Hospital）法则\n\n**定理1** 设\n\n- 当 $x \\to a$ 时，函数 $f(x)$ 和 $F(x)$ 都趋于 $0$.\n- 在点 $a$ 的某去心邻域内，$f'(x)$ 及 $F'(x)$ 都存在且 $F'(x) \\ne 0$.\n- $\\displaystyle\\lim_{x \\to a} \\frac{f'(x)}{F'(x)}$ 存在或为无穷大\n\n则\n\n$$\n\\lim_{x \\to a}\\frac{f(x)}{F(x)}=\\lim_{x \\to a}\\frac{f'(x)}{F'(x)}\n$$\n\n**定理2** 设\n\n- 当 $x \\to \\infty$ 时，函数 $f(x)$ 及 $F(x)$ 都趋于 $0$.\n- 当 $|x|>N$ 时 $f'(x)$ 与 $F'(x)$ 都存在且 $F'(x) \\ne 0$.\n- $\\displaystyle\\lim_{x \\to \\infty} \\frac{f'(x)}{F'(x)}$ 存在或为无穷大.\n\n则 \n\n$$\n\\lim_{x \\to \\infty} \\frac{f(x)}{F(x)}=\\lim_{x \\to \\infty} \\frac{f'(x)}{F'(x)}\n$$\n\n## Taylor 展开\n\n**Taylor 中值定理1** 如果函数 $f(x)$ 在 $x_0$ 处具有 $n$ 阶导数，那么存在 $x_0$ 的一个邻域，对于该邻域内的任一 $x$，有\n\n$$\nf(x)=R_n(x)+\\sum_{k=0}^{n}\\frac{f^{(k)}(x_0)}{k!}(x-x_0)^n\n$$\n\n其中\n\n$$\nR_n(x)=o((x-x_0)^n)\n$$\n\n此为带Peano余项的 $n$ 阶 Taylor 公式.\n\n**Taylor 中值定理2** 如果函数 $f(x)$ 在 $x_0$ 的某个邻域 $U(x_0)$ 内具有 $n+1$ 阶导数，那么对任一 $x \\in U(x_0)$ 有\n\n$$\nf(x)=R_n(x)+\\sum_{k=1}^{n}\\frac{f^{(k)}(x_0)}{k!}(x-x_0)^k\n$$\n\n其中 \n\n$$\nR_n(x)=\\frac{f^{(n+1)}(\\xi)}{(n+1)!}(x-x_0)^{n+1}\n$$\n\n这里 $\\xi$ 是 $x_0$ 与 $x$ 之间的某个值，此为带 Lagrange 余项的 $n$ 阶 Taylor 公式.\n\n习题3-3.10 \n\n(1) 求 $\\displaystyle\\lim_{x \\to +\\infty}\\left( \\sqrt[3]{x^3+3x^2}-\\sqrt[4]{x^4-2x^3} \\right)$\n\n考虑将原式化为\n\n$$\n\\lim_{x \\to +\\infty}x\\left( \\sqrt[3]{1+\\frac{3}{x}}-\\sqrt[4]{1-\\frac{2}{x}} \\right)\n$$\n\n根据 Taylor 公式，$\\sqrt[3]{1+\\frac{3}{x}}=1+\\frac{1}{x}+o(\\frac{1}{x})$，同时 $\\sqrt[4]{1-\\frac{2}{x}}=1-\\frac{1}{2x}+o(\\frac{1}{x})$\n\n于是原极限等于\n\n$$\n\\lim_{x \\to \\infty} x\\left( \\frac{3}{2x}+o\\left(\\frac{1}{x}\\right) \\right)=\\lim_{x \\to \\infty} \\left( \\frac{3}{2}+\\frac{o(1/x)}{1/x} \\right)=\\frac{3}{2}\n$$\n\n习题3-3.11\n\n若函数 $f(x)$ 在 $\\mathbb R$ 上有二阶导数，且 $f''(x)>0$，还有 $\\displaystyle\\lim_{x \\to 0}\\frac{f(x)}{x}=1$.证明：$f(x) \\ge x$.\n\n证明：$f(x)$ 连续，故 $f(0)=\\displaystyle\\lim_{x \\to 0} \\frac{f(x)}{x} \\cdot x=1 \\times 0 = 0$\n\n并且 $f'(0)=\\displaystyle\\lim_{x \\to 0} \\frac{f(x)-f(0)}{x-0}=1$\n\n将 $f(x)$ Taylor 展开，立刻得到\n\n$$\nf(x)=f(0)+f'(0)x+\\frac{f''(\\xi)}{2}x^2=x+\\frac{f''(\\xi)}{2}x^2 \\ge x\n$$\n\n## 积分\n\n### 不定积分\n\n#### 换元积分法\n\n**第一类换元法** 设 $f(u)$ 具有原函数，$u=\\varphi(x)$ 可导，则有换元公式\n\n$$\n\\int f[\\varphi(x)]\\varphi '(x) {\\rm d}x=\\int f(u) {\\rm d}u\n$$\n\n例如，要计算 \n\n$$\n\\int \\frac{ {\\rm d}x}{x(1+2\\ln x)}\n$$\n\n作换元 $u=1+2\\ln x$，则 ${\\rm d}u=\\frac{2{\\rm d}x}{x}$\n\n原式化为\n\n$$\n\\int \\frac{ {\\rm d}u}{2u}=\\frac{\\ln |u|}{2}+C=\\frac{1}{2}\\ln|1+2\\ln x|+C\n$$\n\n**第二类换元法** 设 $x=\\psi(t)$ 是单调的可导函数，并且 $\\psi '(t) \\ne 0$.又设 $f[\\psi(t)]\\psi '(t)$ 具有原函数，则有换元公式\n\n$$\n\\int f(x){\\rm d}x=\\int f[\\psi(t)]\\psi '(t) {\\rm d}t\n$$\n\n例如，在 $a>0$ 时要计算不定积分\n\n$$\n\\int \\sqrt{a^2-x^2} {\\rm d} x\n$$\n\n可以反设 $x=a\\sin t$，其中 $t \\in [-\\frac{\\pi}{2},\\frac{\\pi}{2}]$，于是所求积分化为\n\n$$\n\\int a\\cos t {\\rm d}x\n$$\n\n并且我们有 ${\\rm d}x=a\\cos t {\\rm d}t$，只需积\n\n$$\n\\int a^2\\cos^2 t {\\rm d} t\n$$\n\n这是容易的.\n\n**倒代换**\n\n例如，在 $a \\ne 0$ 时要求 \n\n$$\n\\int \\frac{\\sqrt{a^2-x^2}}{x^4} {\\rm d}x\n$$\n\n作换元 $x=\\frac{1}{t}$，则 ${\\rm d}x=-\\frac{ {\\rm d}t}{t^2}$，于是原积分式化为\n\n$$\n-\\int (a^2t^2-1)^{1/2}|t| {\\rm d}t\n$$\n\n该式又可以化为\n\n$$\n-\\frac{1}{2a^2}\\int (a^2t^2-1)^{1/2} {\\rm d}(a^2t^2-1)=-\\frac{(a^2t^2-1)^{3/2}}{3a^2}+C\n$$\n\n#### 分部积分法\n\n根据 $(uv)'=u'v+uv'$，两侧积分得到\n\n$$\n\\int uv' {\\rm d}x=uv-\\int u'v {\\rm d}x\n$$\n\n也即：\n\n$$\n\\int u {\\rm d}v=uv-\\int v{\\rm d}u\n$$\n\n例如要求 \n\n$$\n\\int x\\cos x {\\rm d}x\n$$\n\n令 $u=x,{\\rm d}v=\\cos x {\\rm d}x$，则 $v=\\sin x$，原积分式就等于\n\n$$\nuv-\\int vdu=x\\sin x-\\int \\sin x{\\rm d}x\n$$\n\n这是容易的.\n\n### 定积分\n\n#### 微积分基本公式\n\n**定积分中值定理** 如果函数 $f(x)$ 在积分区间 $[a,b]$ 上连续，那么在 $(a,b)$ 上至少存在一个点 $\\xi$ 使下式成立：\n\n$$\n\\int_a^b f(x) {\\rm d}x=f(\\xi)(b-a)\n$$\n\n**微积分基本定理** 如果函数 $F(x)$ 是连续函数 $f(x)$ 在区间 $[a,b]$ 上的一个原函数，那么\n\n$$\n\\int_a^b f(x) {\\rm d}x=F(b)-F(a)\n$$\n\n## 微分方程\n\n### 可分离变量的微分方程\n\n解 $\\frac{ {\\rm d}y}{ {\\rm d}x}=2xy^2$\n\n分离变量，化为 $\\frac{ {\\rm d}y}{y^2}=2x {\\rm d}x$，两侧积分得到 $-\\frac{1}{y}=x^2 + C$.\n\n也就是说，我们可以这样解决一部分可以写成 $g(y) {\\rm d}y=f(x) {\\rm d}x$ 的微分方程.\n\n### 齐次方程\n\n如果一阶微分方程可化为 \n\n$$\n\\frac{ {\\rm d}y}{ {\\rm d}x}=\\varphi(\\frac{y}{x})\n$$\n\n那么称它为齐次方程.\n\n此时引入 $u=\\frac{y}{x}$，则 $\\frac{ {\\rm d}y}{ {\\rm d}x}=u+x\\frac{ {\\rm d}u}{ {\\rm d}x}$，回代便得到\n\n$$\nu+x\\frac{ {\\rm d}u}{ {\\rm d}x}=\\varphi(u)\n$$\n\n于是就可以分离变量了.\n\n### 一阶线性微分方程\n\n方程 \n\n$$\n\\frac{ {\\rm d}y}{ {\\rm d}x} + P(x)y=Q(x)\n$$\n\n称作一阶线性微分方程，因为它关于未知函数 $y$ 及其导数是一次方程.当且仅当 $Q(x)=0$ 时称其是齐次的.\n\n为了求出它的解，我们先将 $Q(x)$ 替换为 $0$ 求出其对应的齐次方程的解，它可以分离变量为\n\n$$\n\\frac{ {\\rm d}y}{y}=-P(x) {\\rm d}x\n$$\n\n于是 \n\n$$\n\\ln |y|=-\\int P(x) {\\rm d}x + C_1\n$$\n\n得到\n\n$$\ny=Ce^{-\\int P(x) {\\rm d}x}\n$$\n\n其中 $C=\\pm e^{C_1}$.\n\n现在求原非齐次线性方程的通解.将 $C$ 替换为 $x$ 的未知函数 $u(x)$，则 $y=ue^{-\\int P(x) {\\rm d}x}$.\n\n于是\n\n$$\n\\frac{ {\\rm d}y}{ {\\rm d}x}=u'e^{-\\int P(x) {\\rm d}x}-uP(x)e^{-\\int P(x) {\\rm d}x}\n$$\n\n回代到最初的式子中得到\n\n$$\nu'=Q(x)e^{\\int P(x) {\\rm d}x}\n$$\n\n两侧积分，\n\n$$\nu=\\int Q(x)e^{\\int P(x) {\\rm d}x}+C\n$$\n\n因此\n\n$$\ny=e^{-\\int P(x) {\\rm d}x}\\left( \\int Q(x)e^{\\int P(x) {\\rm d}x}+C \\right)\n$$\n\n上式可改写为\n\n$$\ny=Ce^{-\\int P(x) {\\rm d}x}+e^{-\\int P(x) {\\rm d}x}\\int Q(x)e^{\\int P(x) {\\rm d}x}\n$$\n\n等式右侧第一项是原非齐次线性方程对应的齐次线性方程的通解，第二项是一个特解.\n\n### 伯努利方程\n\n伯努利方程形如\n\n$$\n\\frac{ {\\rm d}y}{ {\\rm d}x}+P(x)y=Q(x)y^n\\quad (n \\ne 0,1)\n$$\n\n只需将其化为线性的.先变形为\n\n$$\ny^{-n}\\frac{ {\\rm d}y}{ {\\rm d}x}+P(x)y^{1-n}=Q(x)\n$$\n\n引入 $z=y^{1-n}$，那么\n\n$$\n\\frac{ {\\rm d}z}{ {\\rm d}x}+(1-n)P(x)z=(1-n)Q(x)\n$$\n\n### 可降阶的高阶微分方程\n\n对于形如 $y^{(n)}=f(x)$ 的求解是容易的，连着积分 $n$ 次即可.\n\n对于形如 $y''=f(x,y')$ 的求解也很简单，设 $y'=p$，求解两个关于 $x,p$ 的一阶微分方程即可.\n\n对于形如 $y''=f(y,y')$ 的微分方程，同样考虑令 $y'=p$，原方程变为 \n\n$$\n\\frac{ {\\rm d}p}{ {\\rm d}x}=f(y,p)\n$$\n\n也即\n\n$$\n\\frac{ {\\rm d}p}{ {\\rm d}y} \\frac{ {\\rm d}y}{ {\\rm d}x}=f(y,p)\n$$\n\n而 $\\frac{ {\\rm d}y}{ {\\rm d}x}$ 就是 $p$，因此只需求解 $p \\frac{ {\\rm d}p}{ {\\rm d}y}=f(y,p)$","tags":["学习笔记","高等数学"],"categories":["数学"]},{"title":"人，事，物","url":"/post/ba11f26f.html","content":"\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=2619645821&auto=0&height=66\"></iframe>\n\n本来想发到博客园上，奈何它最近持续被攻击，几乎瘫痪。倒也是时候再次搭建起来自己的博客了，趁此机会，就将这个告别高中的文章作为伊始吧。\n\n2024年高考语文新课标I卷的现代文阅读中有这样一句话：\n\n{% note info %} 往事总在回忆时被赋予意义，在放牛这个经历上，我更愿意就事论事，返回到当年的心境里，看一看当时的悲欢和忧乐。 {% endnote %}\n\n说实话，我不觉得那篇文章做到了这一宣言，但我愿意沿着这一方向，诚恳地讲讲我的故事。\n\n文笔拙劣，还请海涵。\n\n<!--more-->\n\n## 几个人\n\n沈从文先生讲创作时强调“要贴着人物写”，在我的中学生涯里，人也理所当然地是中心。\n\n### 长川、文天\n\n我曾在初中毕业的时候在QQ空间写过一篇长文，回忆了我初中时候的一些好友与老师。奈何我有个不大好的毛病，就是喜欢随机删掉过去写的东西，于是那篇文章自然也就遗失了。\n\n高考前几天，长川问我要不要写他，我给了“写一半”的答复，为什么偏偏是一半？因为我无意再去探讨什么“怎么认识的”“关系怎么变好的”之类不痛不痒的问题。我只想重温一下某些瞬间。\n\n### 王子\n\n### 夏煜捷\n\n<iframe src=\"//player.bilibili.com/player.html?aid=808648101&bvid=BV1t34y1273b&cid=497500048&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n#### 一\n\n我还没有和任何人说过这段颇为滑稽的经历。我对夏煜捷的初印象是在高二。当时我去闫墨的办公室，不知道是要请假，还是填表之类的琐事。推门而入时见到一个女孩子坐在闫墨旁边，不知道在谈些什么。说来惭愧，既然是初印象，我此时是不认识她的——尽管已经做了一年多同学。愣了一下之后闫墨让我先说，我于是边说，边回忆着这人是谁：虽然不大认识，但是莫名有一种熟悉感。\n\n在本班的人里找的话，查无此人，但是我确信是和她见过多次的，不过是现在突然忘了吧？越想越奇怪，看她两眼她又带着笑看回来，让我更是心虚，匆匆说完之后就逃离了现场，这件事就不了了之了——我终究没去追查这个人到底是谁。\n\n高三回班之后我才知道，原来那天的人就是夏煜捷。从初中开始就听到过的名字，只是我一直没有和人脸对上号罢了。\n\n#### 二\n\n到了高三，我极想和她交谈几句，原因无他，只因为她从来都是笑嘻嘻的，让我很惊讶。我想知道她每天都能这样的理由是什么，但是似乎就是性格如此吧。\n\n转折来的很快也很突然，某一天我隔壁的隔壁班前在看月亮时 J 经过了附近，似乎拐了个弯，又似乎是直接走过来，和我搭上了话。\n\n她神神秘秘地说，她发现了两本好看的书。\n\n对话框出现了。我略加思索便得出答复：啥书啊？可惜她笑了笑就扭过头走了。\n\n不是，哥们？这能不急也是神人了，我急忙叫嚷着别走啊你倒是说完啊之类的。索性她还是有人性的，回过头来摆摆手说要不要一块过去看看。\n\n那书是图书角的两本《电影文学》。\n\n之后，我常在晚自习课间去那个图书角看上两眼。图书角残留下来的杂志实在无聊，于是我又自己买来了《人间草木》过去看。\n\n她问过我为什么要拿着书跑到那边去看，我只是笑着说有氛围感。\n\n#### 三\n\n说到最后，我还是没有向她提出最初想要问的问题，也就是为什么天天都能嘻嘻哈哈的，我始终觉得这是一个很了不起的事情。\n\n此后我与她还有几次接触，不过也没必要在这里都写下来。\n\n#### 四\n\n故事到这里就已经结束，大概我之后再也不会见到她了。\n\n### Lucinda\n\n我不愿在这里提及一些并不算愉快的回忆，因此在文化课老师中，我只选择写了 Lucinda。\n\nLucinda 是我高中三年过去之后唯一想要谈论的文化课老师。\n\n还记得最开始看到 Lucinda 时，周围都在说她眼有点斜视的感觉，但熟悉了之后也就不在意了。\n\n说来奇怪，所有的文化课老师与我说过的话的总和或许是 Lucinda 与我说的话的数十倍甚至百倍，然而如今，我仍能清晰地回忆起来的仅有 Lucinda 的三句话。\n\n第一句是在我回班不久时，我因为被抽到台上写单词的时候没过关，所以需要在之后几次的听写结束交上去听写本，并在下课后改正让 Lucinda 检查。一次，我没改对两个单词，Lucinda 指了出来，习惯使然，我连说了两个“对不起”。\n\n从来没有人像 Lucinda 一样对我说了下面的话。\n\n她说，你别给我说对不起，你应该对不起你自己。\n\n或许这不是原话，但也一定差不了几个字。\n\n不知道该说些什么，愣了一下过后我也只得淡淡回几个嗯嗯嗯。\n\n旁边的闫墨在开课件，听见这段对话后笑了两下，不知道是在笑什么。\n\n第二句是在我完全放弃清华强基之后，一次偶然的机会，我需要向 Lucinda 借手机看复旦的强基宣讲，她询问我，说：“真的不考虑再冲一冲了吗？清华都给了这么好的优惠条件。”\n\n明明校测满分的约都没了，还有个啥优惠啊？我也没法，只能笑着回道“优惠都没了啊，冲不了了。”\n\n她似乎还不大了解强基的这些变动。\n\n她是唯一一个向我发问的利益几乎无关的任课老师。\n\n第三句是在我复旦初审被拒，转向人大一段时间之后。我刚刚写完完型篇子，去找 Lucinda 要信息卷。\n\n我拿完卷子，她说”孙奕豪啊，你不要想着这边省点劲，那边省点劲，咱还是要把高考分数往上提一提“，我本想反驳，但是无论如何也开不了口。\n\n或许我想说，我没有省劲，我在好好学。但是真的是这样吗？如果我当初报了清华，我的分数真的会像现在一样停止吗。或许不会吧。\n\n又或许我想为自己辩解，说变成这样也不能全怪我。或许还应该怪天赋，或许还应该怪政策？\n\n我什么都没说出口，只是点了几下头。我连一个“嗯”字都不敢说出来，因为眼眶里已经出来泪水了，声音不大一样。\n\n不知道她有没有看出我的窘迫，我想大概是看出来了吧。她没有再多说几句，就放我走了。\n\n我把卷子放到座位上，就匆匆抽了几张纸去厕所洗脸。大概没人看出来我的异样吧。\n\n### 信息中心\n\n根据身边统计法，信息中心的老师比一部分文化课老师要纯粹得多。\n\n初次上课，马建辉在前面讲题，侯肖雷则在后面坐着，忘了在干什么。\n\n我还记得那次上课的时候，我提出 $\\left\\lceil \\frac{a}{b} \\right\\rceil=\\left\\lfloor \\frac{a+b-1}{b} \\right\\rfloor$可以避免使用ceil函数的同时方便地计算一个分数的上取整。大概是OJ的问题，提交后没有通过任何一个测试点，但是代码是没有问题的。\n\n询问马建辉得不到答案，后方的侯老师倒是给了一个相对靠谱的解释：那个OJ会检测你是否使用了某些函数，没有使用就直接判错。\n\n我从未在别的任何地方见过有这种检测，荒谬且无理。\n\n疫情又来了，我被封在家里，侯老师给我发来了一个压缩包，里面是 Acwing 的算法基础课的几节。在看完它们之后，我毫不犹豫地入了 Acwing 的算法提高课。在那个假期，我的水平飞速提升，假如没有这个机会，我或许需要在整个初三学这一个月所学的东西。\n\nAcwing 的课程质量真的就那么高吗？我看未必。但是不可否认的是，它确实真正让我打开了OI的门。\n\n我十分感谢侯老师，或许他早就忘了曾经给过我这样的一个压缩包，或许他不知道我从他这里真正入门，但这都无所谓了。\n\nAPIO 2023 是我遇到的第一个也是最大的一个槛。在我自以为水平不错时，一个铜奖都没有捞到是非常大的打击，但也很幸运，它让我清楚了自己的水平。\n\n赛后我和马老师在高铁上吵了一顿，谁都不高兴。回到学校，我独自在励志楼三楼的办公室，犹豫着将来的去路。\n\n在某个中午，我向杨忠毅老师发了QQ，大概意思是想要聊一聊。为什么不找马老师？因为刚吵完一顿不知道怎么跟他开口，所以想借杨老师间接说出来。非常巧的是杨老师中午竟然还在学校。我开口一向很直接，直接就说我要退赛。杨老师没有很惊讶，大概是猜到了我想说什么。不出意外的话，他会劝我几句，然后我做个了断。\n\n不知道为什么，我最后没有退赛。或许是被那句“你是我遇到过的最有天赋的学生”震住了，还是自己本来就想再拼一把。但总之，幸运的是，最终没有对不起杨忠毅老师这番劝导。\n\n杨忠毅老师和我们年龄大约是更相近一些的，喜欢玩原神，看我玩崩铁也会笑一笑，还跟我分享买电脑的小渠道，总觉得我和他更像是朋友一般。\n\n对于马建辉老师，他待我更是和亲人一样，挑不出一点毛病，较之其他竞赛的一些教练更是高到不知道哪层了。我印象最深的一次是我一人在福建师大附中集训的时候，母亲跟我说，马老师喝醉了酒给她发语音，说我一定要坚持学下去，他一定尽自己全力支持云云。\n\n想来高中三年，无论何时都尽自己全力关照、支持我的老师就只有马老师一人吧。\n\n##  几处景\n\n### 玉兰花\n\n玉兰是一中两个吉祥物之一的原型，这还是我高三时才晓得的，并且在几个月后我发现校园里其实就种着这种花，这也并不奇怪，毕竟可以被称之为校花。\n\n一天下午我去食堂（锄禾）吃饭时看见三五成群的学生围在连廊一侧对着外面指指点点，一时兴起之下，我也去凑了凑热闹，这一凑就吓了我一跳，一棵树将近伸到了三楼高，树上开满了白色的花，花瓣并非平铺或是好几轮团在一起，而是同两只手合在一起比出的花一样，在我看来颇为奇特。\n\n![](https://s3.bmp.ovh/imgs/2025/05/31/f6f2cf56a9ff97c7.jpg)\n\n不能称之为宽松的吃饭时间下，我暂别了这里，回到班里后我问同桌这花是什么，我说这花是白的，长在树上（笑），他于是问我几轮啊之类的东西。我不大懂，模糊地答了答之后他猜测会不会是玉兰，但是又说学校里没有玉兰，我提议课间去看一看，他也欣然同意了。\n\n即使是在晚自习课间，那棵树前还是有很多人在拍照围观，那就是玉兰。借此机会，我也向同桌学习了一下给花分类相关的东西，只不过那些东西早都忘了。\n\n那几天，无论何时我路过那里，总会有人与我共同欣赏那盛开的玉兰花。别了，玉兰。\n\n### 爬山虎\n\n如果说玉兰是名义上的校花，那爬山虎则是事实上的校木了，虽然在我看来称它是木有些怪怪的，然而这似乎是最好的叫法了。\n\n爬山虎就像是楼的肺一般，它给整个校园带来了绿色的生机，也给楼里的学生一个喘气的地方。\n\n![](https://s3.bmp.ovh/imgs/2025/05/31/8d492852c1dae575.jpg)\n\n看似平平无奇的爬山虎，竟生生抢走了校园里万千事物的风头，这在别处大概是绝无仅有的稀罕事。移步中华，爬山虎离我而去，取而代之的是每间教室外的几盆不知名号的植株，长的好的几株垂向下方去，每层都是如此，就颇有几分爬山虎的韵味了，但比之致远还是远远不如的。\n\n后来我才得知是我有眼无珠：班前的这植物竟就是爬山虎。而今想来，那平凡但蛮横的生命力，早已不止属于爬山虎了。\n\n### 秋千\n\n一中有秋千，不过只有两个位置且坐落于小学部门口，为“小学生专属”。\n\n这贴在柱子上的提醒大概没几个人回去看，即使看到了也会装装糊涂。我有闲工夫到那里时，秋千几乎总是高中生的天地，这并不是因为小学生们不去玩秋千，恰恰相反，秋千在他们那里相当受欢迎，原因只是我们的活动时间不重叠罢了。这也免除了很多烦扰，毕竟不用和真孩子们抢玩具了。\n\n秋千承载了很多人沉重的记忆，这里是个散心的好去处。还记得有一天晚自习时，我称自己头晕，想要下来转一圈，但实际上却是荡了一节课的秋千。\n\n秋千上自是一方人间，它自己不会生长，却见证了无数人的成长；它自己不会说话，却好像能与你说尽所有的心事。\n\n有人打趣道：偷得浮生半日闲，再偷浮生两贯钱。我不觉得偷钱好玩，只愿闲里偷更闲。\n\n\n","tags":["随笔"],"categories":["随笔"]}]